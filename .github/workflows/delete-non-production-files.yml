name: Clean Up Test Files

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  delete-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Create new branch for cleanup
        run: |
          git checkout -b cleanup-branch  # Create and switch to a new branch

      - name: Delete __test__ folder
        run: |
          if [ -d "__test__" ]; then
            rm -rf __test__/
            echo "__test__ folder and its contents have been deleted."
          else
            echo "__test__ folder does not exist."
          fi

      - name: Delete Jest config and setup files
        run: |
          if [ -f "jest.config.ts" ]; then
            rm jest.config.ts
            echo "jest.config.ts has been deleted."
          else
            echo "jest.config.ts does not exist."
          fi

          if [ -f "jest.setup.ts" ]; then
            rm jest.setup.ts
            echo "jest.setup.ts has been deleted."
          else
            echo "jest.setup.ts does not exist."
          fi

      - name: Confirm Deletions and Check Status
        id: check_deletions
        run: |
          git status
          # Check if deletions are staged for commit
          if git diff --cached --exit-code; then
            echo "No files deleted."
            echo "::set-output name=files_deleted::false"
          else
            echo "Files have been deleted and staged."
            git add -A
            git commit -m "Remove __test__ folder and Jest config/setup files"
            echo "::set-output name=files_deleted::true"
          fi

      - name: Push cleanup branch
        if: ${{ steps.check_deletions.outputs.files_deleted == 'true' }}  
        run: |
          git push origin cleanup-branch  # Push the cleanup branch to the remote
      - name: Install GitHub CLI
        if: ${{ steps.check_deletions.outputs.files_deleted == 'true' }} 
        run: |
          sudo apt update
          sudo apt install -y gh
      - name: Create Pull Request
        if: ${{ steps.check_deletions.outputs.files_deleted == 'true' }} 
        run: gh pr create -B base_branch -H branch_to_merge --title 'Merge branch_to_merge into base_branch' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}